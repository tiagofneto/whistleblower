{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depostiAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract Verifier",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "rewardRelayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lensInteractor",
          "type": "address"
        }
      ],
      "name": "setLensInteractor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract Verifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "129:1509:10:-:0;;;1750:34:9;;;-1:-1:-1;;;;;;1788:27:9;;;372:202:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;450:2;462:42;1871:59:9;;;;;;;;;;;1954:2;1944:7;:12;;;1936:55;;;;-1:-1:-1;;;1936:55:9;;994:2:15;1936:55:9;;;976:21:15;1033:2;1013:18;;;1006:30;1072:32;1052:18;;;1045:60;1122:18;;1936:55:9;792:354:15;1936:55:9;1997:6;:16;;-1:-1:-1;;1997:16:9;;;;;;;-1:-1:-1;;;;;2019:16:9;;;;2042:80;2065:7;2061:11;;:1;:11;;;2042:80;;;2107:8;;;;:5;:8::i;:::-;2087:17;;;;;;;:14;:17;;;;;:28;2102:1;2074:3;2102:1;2074:3;:::i;:::-;;;;2042:80;;;-1:-1:-1;2139:18:9;2145:11;2155:1;2145:7;:11;:::i;:::-;2139:18;;:5;:18::i;:::-;2128:8;;;:5;:8;;;:29;-1:-1:-1;;513:30:10::1;::::0;;;;-1:-1:-1;;;;;549:20:10::1;;::::0;129:1509;;4297:3478:9;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:9;;1917:2:15;7741:29:9;;;1899:21:15;1956:2;1936:18;;;1929:30;1995:21;1975:18;;;1968:49;2034:18;;7741:29:9;1715:343:15;14:369;111:6;119;172:2;160:9;151:7;147:23;143:32;140:52;;;188:1;185;178:12;140:52;211:16;;270:2;255:18;;249:25;211:16;;-1:-1:-1;;;;;;303:31:15;;293:42;;283:70;;349:1;346;339:12;283:70;372:5;362:15;;;14:369;;;;;:::o;1151:127::-;1212:10;1207:3;1203:20;1200:1;1193:31;1243:4;1240:1;1233:15;1267:4;1264:1;1257:15;1283:201;1321:3;1349:10;1394:2;1387:5;1383:14;1421:2;1412:7;1409:15;1406:41;;1427:18;;:::i;:::-;1476:1;1463:15;;1283:201;-1:-1:-1;;;1283:201:15:o;1489:221::-;1528:4;1557:10;1617;;;;1587;;1639:12;;;1636:38;;;1654:18;;:::i;:::-;1691:13;;1489:221;-1:-1:-1;;;1489:221:15:o;1715:343::-;129:1509:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c8063ab750e75116100a0578063e829558811610064578063e829558814610385578063ec732959146103a5578063ed33639f146103d9578063f178e47c1461040d578063fc7e9c6f1461043a57600080fd5b8063ab750e75146102e6578063b214faa514610306578063ba70f75714610319578063c2b40ae414610343578063cd87a3b41461037057600080fd5b80636d9833e3116100e75780636d9833e314610239578063839df945146102595780638ea3099e1461028957806390eeb02b146102a957806395bbe4e7146102c657600080fd5b806317cc915c146101245780632b7ac3f314610169578063414a37ba146101b557806345af8858146101e55780634ecf518b14610207575b600080fd5b34801561013057600080fd5b5061015461013f36600461108d565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561017557600080fd5b5061019d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610160565b3480156101c157600080fd5b506101d760008051602061126883398151915281565b604051908152602001610160565b3480156101f157600080fd5b506102056102003660046110be565b61045f565b005b34801561021357600080fd5b506000546102249063ffffffff1681565b60405163ffffffff9091168152602001610160565b34801561024557600080fd5b5061015461025436600461108d565b610497565b34801561026557600080fd5b5061015461027436600461108d565b60046020526000908152604090205460ff1681565b34801561029557600080fd5b506101d76102a43660046110e2565b610515565b3480156102b557600080fd5b506003546102249063ffffffff1681565b3480156102d257600080fd5b506102056102e13660046110be565b6106e7565b3480156102f257600080fd5b50610205610301366004611117565b6107f2565b61020561031436600461108d565b610997565b34801561032557600080fd5b5060035463ffffffff166000908152600260205260409020546101d7565b34801561034f57600080fd5b506101d761035e36600461108d565b60026020526000908152604090205481565b34801561037c57600080fd5b50610224601e81565b34801561039157600080fd5b506101d76103a036600461108d565b610a6f565b3480156103b157600080fd5b506101d77f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b3480156103e557600080fd5b5061019d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041957600080fd5b506101d761042836600461108d565b60016020526000908152604090205481565b34801561044657600080fd5b5060035461022490640100000000900463ffffffff1681565b6006546001600160a01b03161561047557600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60008181036104a857506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484036104d9575060019392505050565b8063ffffffff166000036104eb5750601e5b806104f581611196565b9150508163ffffffff168163ffffffff16036104b3575060009392505050565b600060008051602061126883398151915283106105795760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064015b60405180910390fd5b60008051602061126883398151915282106105e05760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610570565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065391906111c4565b909250905060008051602061126883398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc91906111c4565b509695505050505050565b6006546001600160a01b031633146107315760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b6044820152606401610570565b600080826001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000060405160006040518083038185875af1925050503d806000811461079f576040519150601f19603f3d011682016040523d82523d6000602084013e6107a4565b606091505b5091509150816107ed5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610570565b505050565b6006546001600160a01b0316331461083c5760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b6044820152606401610570565b60008181526005602052604090205460ff161561088b5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481cdc195b9d609a1b6044820152606401610570565b61089482610497565b6108d65760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b6044820152606401610570565b6040805180820182528381526020810183905290516370ffa84160e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163e1ff5082916109379188918891906004016111e8565b602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109789190611245565b506000908152600560205260409020805460ff19166001179055505050565b7f000000000000000000000000000000000000000000000000000000000000000034146109fd5760405162461bcd60e51b815260206004820152601460248201527315dc9bdb99c819195c1bdcda5d08185b5bdd5b9d60621b6044820152606401610570565b60008181526004602052604090205460ff1615610a545760405162461bcd60e51b815260206004820152601560248201527412185cda08185b1c9958591e481a5b98db1d591959605a1b6044820152606401610570565b6000908152600460205260409020805460ff19166001179055565b600081600003610aa057507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600103610acf57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d919050565b81600203610afe57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200919050565b81600303610b2d57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb919050565b81600403610b5c57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9919050565b81600503610b8b57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959919050565b81600603610bba57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c919050565b81600703610be957507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4919050565b81600803610c1857507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80919050565b81600903610c4657507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007919050565b81600a03610c7557507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30919050565b81600b03610ca457507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5919050565b81600c03610cd357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f919050565b81600d03610d0257507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd919050565b81600e03610d3157507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108919050565b81600f03610d6057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6919050565b81601003610d8f57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854919050565b81601103610dbe57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea919050565b81601203610ded57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d919050565b81601303610e1c57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05919050565b81601403610e4b57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4919050565b81601503610e7a57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967919050565b81601603610ea957507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453919050565b81601703610ed857507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48919050565b81601803610f0757507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1919050565b81601903610f3657507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c919050565b81601a03610f6557507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99919050565b81601b03610f9457507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354919050565b81601c03610fc257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d919050565b81601d03610ff157507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427919050565b81601e0361102057507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb919050565b81601f0361104f57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610570565b60006020828403121561109f57600080fd5b5035919050565b6001600160a01b03811681146110bb57600080fd5b50565b6000602082840312156110d057600080fd5b81356110db816110a6565b9392505050565b6000806000606084860312156110f757600080fd5b8335611102816110a6565b95602085013595506040909401359392505050565b6000806000806060858703121561112d57600080fd5b843567ffffffffffffffff8082111561114557600080fd5b818701915087601f83011261115957600080fd5b81358181111561116857600080fd5b88602082850101111561117a57600080fd5b6020928301999098509187013596604001359550909350505050565b600063ffffffff8216806111ba57634e487b7160e01b600052601160045260246000fd5b6000190192915050565b600080604083850312156111d757600080fd5b505080516020909101519092909150565b606081528260608201528284608083013760006080848301015260006080601f19601f860116830101905060208083018460005b60028110156112395781518352918301919083019060010161121c565b50505050949350505050565b60006020828403121561125757600080fd5b815180151581146110db57600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122064efd3ccdebebaf56239c0416f9c816a9eaf2e1c535362b535b5301d2f69e75b64736f6c634300080f0033",
    "sourceMap": "129:1509:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:47;;;;;;;;;;-1:-1:-1;293:47:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:14:15;;357:22;339:41;;327:2;312:18;293:47:10;;;;;;;;172:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;573:32:15;;;555:51;;543:2;528:18;172:34:10;391:221:15;979:114:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;979:114:9;;;;;763:25:15;;;751:2;736:18;979:114:9;617:177:15;1489:147:10;;;;;;;;;;-1:-1:-1;1489:147:10;;;;;:::i;:::-;;:::i;:::-;;1290:20:9;;;;;;;;;;-1:-1:-1;1290:20:9;;;;;;;;;;;1361:10:15;1349:23;;;1331:42;;1319:2;1304:18;1290:20:9;1187:192:15;3678:394:9;;;;;;;;;;-1:-1:-1;3678:394:9;;;;;:::i;:::-;;:::i;246:43:10:-;;;;;;;;;;-1:-1:-1;246:43:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;2234:480:9;;;;;;;;;;-1:-1:-1;2234:480:9;;;;;:::i;:::-;;:::i;1750:34::-;;;;;;;;;;-1:-1:-1;1750:34:9;;;;;;;;1240:245:10;;;;;;;;;;-1:-1:-1;1240:245:10;;;;;:::i;:::-;;:::i;807:429::-;;;;;;;;;;-1:-1:-1;807:429:10;;;;;:::i;:::-;;:::i;578:225::-;;;;;;:::i;:::-;;:::i;4118:94:9:-;;;;;;;;;;-1:-1:-1;4190:16:9;;;;4162:7;4184:23;;;:5;:23;;;;;;4118:94;;1657:40;;;;;;;;;;-1:-1:-1;1657:40:9;;;;;:::i;:::-;;;;;;;;;;;;;;1701:45;;;;;;;;;;;;1744:2;1701:45;;4297:3478;;;;;;;;;;-1:-1:-1;4297:3478:9;;;;;:::i;:::-;;:::i;1097:114::-;;;;;;;;;;;;1134:77;1097:114;;1254:31;;;;;;;;;;;;;;;1604:49;;;;;;;;;;-1:-1:-1;1604:49:9;;;;;:::i;:::-;;;;;;;;;;;;;;1788:27;;;;;;;;;;-1:-1:-1;1788:27:9;;;;;;;;;;;1489:147:10;1564:14;;-1:-1:-1;;;;;1564:14:10;:28;1556:37;;;;;;1599:14;:32;;-1:-1:-1;;;;;;1599:32:10;-1:-1:-1;;;;;1599:32:10;;;;;;;;;;1489:147::o;3678:394:9:-;3735:4;3751:10;;;3747:43;;-1:-1:-1;3778:5:9;;3678:394;-1:-1:-1;3678:394:9:o;3747:43::-;3822:16;;;;;3878:172;3902:8;;;;;;;:5;:8;;;;;;3893:17;;3889:53;;-1:-1:-1;3929:4:9;;3678:394;-1:-1:-1;;;3678:394:9:o;3889:53::-;3953:1;:6;;3958:1;3953:6;3949:52;;-1:-1:-1;1744:2:9;3949:52;4008:3;;;;:::i;:::-;;;;4031:17;4026:22;;:1;:22;;;3878:172;;-1:-1:-1;4062:5:9;;3678:394;-1:-1:-1;;;3678:394:9:o;2234:480::-;2342:7;-1:-1:-1;;;;;;;;;;;2365:27:9;;2357:72;;;;-1:-1:-1;;;2357:72:9;;3608:2:15;2357:72:9;;;3590:21:15;;;3627:18;;;3620:30;3686:34;3666:18;;;3659:62;3738:18;;2357:72:9;;;;;;;;;-1:-1:-1;;;;;;;;;;;2443:28:9;;2435:74;;;;-1:-1:-1;;;2435:74:9;;3969:2:15;2435:74:9;;;3951:21:15;4008:2;3988:18;;;3981:30;4047:34;4027:18;;;4020:62;-1:-1:-1;;;4098:18:15;;;4091:31;4139:19;;2435:74:9;3767:397:15;2435:74:9;2575:24;;-1:-1:-1;;;2575:24:9;;;;;4343:25:15;;;2515:9:9;4384:18:15;;;4377:34;;;2535:5:9;;-1:-1:-1;;;;;2575:18:9;;;;;4316::15;;2575:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2566:33;;-1:-1:-1;2566:33:9;-1:-1:-1;;;;;;;;;;;;2627:6:9;2616:1;2609:38;2662:24;;-1:-1:-1;;;2662:24:9;;;;;4343:25:15;;;4384:18;;;4377:34;;;2605:42:9;;-1:-1:-1;;;;;;2662:18:9;;;;;4316::15;;2662:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2653:33:9;2234:480;-1:-1:-1;;;;;;2234:480:9:o;1240:245:10:-;1317:14;;-1:-1:-1;;;;;1317:14:10;1303:10;:28;1295:54;;;;-1:-1:-1;;;1295:54:10;;5006:2:15;1295:54:10;;;4988:21:15;5045:2;5025:18;;;5018:30;-1:-1:-1;;;5064:18:15;;;5057:43;5117:18;;1295:54:10;4804:337:15;1295:54:10;1357:9;1368:17;1389:7;-1:-1:-1;;;;;1389:12:10;1409:13;1389:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:71;;;;1441:4;1433:37;;;;-1:-1:-1;;;1433:37:10;;5558:2:15;1433:37:10;;;5540:21:15;5597:2;5577:18;;;5570:30;-1:-1:-1;;;5616:18:15;;;5609:50;5676:18;;1433:37:10;5356:344:15;1433:37:10;1289:196;;1240:245;:::o;807:429::-;938:14;;-1:-1:-1;;;;;938:14:10;924:10;:28;916:54;;;;-1:-1:-1;;;916:54:10;;5006:2:15;916:54:10;;;4988:21:15;5045:2;5025:18;;;5018:30;-1:-1:-1;;;5064:18:15;;;5057:43;5117:18;;916:54:10;4804:337:15;916:54:10;985:30;;;;:15;:30;;;;;;;;984:31;976:57;;;;-1:-1:-1;;;976:57:10;;5907:2:15;976:57:10;;;5889:21:15;5946:2;5926:18;;;5919:30;-1:-1:-1;;;5965:18:15;;;5958:43;6018:18;;976:57:10;5705:337:15;976:57:10;1047:17;1059:4;1047:11;:17::i;:::-;1039:49;;;;-1:-1:-1;;;1039:49:10;;6249:2:15;1039:49:10;;;6231:21:15;6288:2;6268:18;;;6261:30;-1:-1:-1;;;6307:18:15;;;6300:49;6366:18;;1039:49:10;6047:343:15;1039:49:10;1119:68;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1119:68:10;;-1:-1:-1;;;;;1119:8:10;:20;;;;:68;;1140:5;;;;1119:68;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1194:30:10;;;;:15;:30;;;;;:37;;-1:-1:-1;;1194:37:10;1227:4;1194:37;;;-1:-1:-1;;;807:429:10:o;578:225::-;659:13;646:9;:26;638:59;;;;-1:-1:-1;;;638:59:10;;7653:2:15;638:59:10;;;7635:21:15;7692:2;7672:18;;;7665:30;-1:-1:-1;;;7711:18:15;;;7704:50;7771:18;;638:59:10;7451:344:15;638:59:10;712:23;;;;:11;:23;;;;;;;;711:24;703:58;;;;-1:-1:-1;;;703:58:10;;8002:2:15;703:58:10;;;7984:21:15;8041:2;8021:18;;;8014:30;-1:-1:-1;;;8060:18:15;;;8053:51;8121:18;;703:58:10;7800:345:15;703:58:10;768:23;;;;:11;:23;;;;;:30;;-1:-1:-1;;768:30:10;794:4;768:30;;;578:225::o;4297:3478:9:-;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:9;;4297:3478;-1:-1:-1;4297:3478:9:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:9;;8352:2:15;7741:29:9;;;8334:21:15;8391:2;8371:18;;;8364:30;-1:-1:-1;;;8410:18:15;;;8403:49;8469:18;;7741:29:9;8150:343:15;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:15;;14:180;-1:-1:-1;14:180:15:o;799:131::-;-1:-1:-1;;;;;874:31:15;;864:42;;854:70;;920:1;917;910:12;854:70;799:131;:::o;935:247::-;994:6;1047:2;1035:9;1026:7;1022:23;1018:32;1015:52;;;1063:1;1060;1053:12;1015:52;1102:9;1089:23;1121:31;1146:5;1121:31;:::i;:::-;1171:5;935:247;-1:-1:-1;;;935:247:15:o;1384:400::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1602:9;1589:23;1621:31;1646:5;1621:31;:::i;:::-;1671:5;1723:2;1708:18;;1695:32;;-1:-1:-1;1774:2:15;1759:18;;;1746:32;;1384:400;-1:-1:-1;;;1384:400:15:o;1971:733::-;2059:6;2067;2075;2083;2136:2;2124:9;2115:7;2111:23;2107:32;2104:52;;;2152:1;2149;2142:12;2104:52;2192:9;2179:23;2221:18;2262:2;2254:6;2251:14;2248:34;;;2278:1;2275;2268:12;2248:34;2316:6;2305:9;2301:22;2291:32;;2361:7;2354:4;2350:2;2346:13;2342:27;2332:55;;2383:1;2380;2373:12;2332:55;2423:2;2410:16;2449:2;2441:6;2438:14;2435:34;;;2465:1;2462;2455:12;2435:34;2512:7;2505:4;2496:6;2492:2;2488:15;2484:26;2481:39;2478:59;;;2533:1;2530;2523:12;2478:59;2564:4;2556:13;;;;2588:6;;-1:-1:-1;2626:20:15;;;2613:34;;2694:2;2679:18;2666:32;;-1:-1:-1;1971:733:15;;-1:-1:-1;;;;1971:733:15:o;3119:282::-;3157:3;3201:10;3194:5;3190:22;3231:7;3221:138;;3281:10;3276:3;3272:20;3269:1;3262:31;3316:4;3313:1;3306:15;3344:4;3341:1;3334:15;3221:138;-1:-1:-1;;3375:20:15;;3119:282;-1:-1:-1;;3119:282:15:o;4422:245::-;4501:6;4509;4562:2;4550:9;4541:7;4537:23;4533:32;4530:52;;;4578:1;4575;4568:12;4530:52;-1:-1:-1;;4601:16:15;;4657:2;4642:18;;;4636:25;4601:16;;4636:25;;-1:-1:-1;4422:245:15:o;6395:769::-;6626:2;6615:9;6608:21;6665:6;6660:2;6649:9;6645:18;6638:34;6723:6;6715;6709:3;6698:9;6694:19;6681:49;6780:1;6774:3;6765:6;6754:9;6750:22;6746:32;6739:43;6589:4;6850:3;6843:2;6839:7;6834:2;6826:6;6822:15;6818:29;6807:9;6803:45;6799:55;6791:63;;6873:4;6912:2;6901:9;6897:18;6957:6;6981:1;6991:167;7005:4;7002:1;6999:11;6991:167;;;7064:13;;7052:26;;7098:12;;;;7133:15;;;;7025:1;7018:9;6991:167;;;6995:3;;;;6395:769;;;;;;:::o;7169:277::-;7236:6;7289:2;7277:9;7268:7;7264:23;7260:32;7257:52;;;7305:1;7302;7295:12;7257:52;7337:9;7331:16;7390:5;7383:13;7376:21;7369:5;7366:32;7356:60;;7412:1;7409;7402:12",
    "linkReferences": {},
    "immutableReferences": {
      "23390": [
        {
          "start": 1003,
          "length": 32
        }
      ],
      "24048": [
        {
          "start": 379,
          "length": 32
        },
        {
          "start": 2303,
          "length": 32
        }
      ],
      "24050": [
        {
          "start": 1856,
          "length": 32
        },
        {
          "start": 2457,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FIELD_SIZE()": "414a37ba",
    "ROOT_HISTORY_SIZE()": "cd87a3b4",
    "ZERO_VALUE()": "ec732959",
    "commitments(bytes32)": "839df945",
    "currentRootIndex()": "90eeb02b",
    "deposit(bytes32)": "b214faa5",
    "filledSubtrees(uint256)": "f178e47c",
    "getLastRoot()": "ba70f757",
    "hashLeftRight(address,bytes32,bytes32)": "8ea3099e",
    "hasher()": "ed33639f",
    "isKnownRoot(bytes32)": "6d9833e3",
    "levels()": "4ecf518b",
    "nextIndex()": "fc7e9c6f",
    "nullifierHashes(bytes32)": "17cc915c",
    "rewardRelayer(address)": "95bbe4e7",
    "roots(uint256)": "c2b40ae4",
    "setLensInteractor(address)": "45af8858",
    "verifier()": "2b7ac3f3",
    "verify(bytes,bytes32,bytes32)": "ab750e75",
    "zeros(uint256)": "e8295588"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depostiAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract Verifier\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"rewardRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lensInteractor\",\"type\":\"address\"}],\"name\":\"setLensInteractor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract Verifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x4684baad582f7eed0665f7dfd7ff74936c010e9968588e339c374aa0e38fd6bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a12eb60d274f19d0f8240a49f9666b621d64efd2d2f6da046f6f312f36f88fb\",\"dweb:/ipfs/QmSfYXBpTftctnaRbxPgCgDdCnY735DZo5SkAKy4rMc8NV\"]},\"src/Pool.sol\":{\"keccak256\":\"0x443b54e00a23d2048dfd87624cb7e87132afc280c7b0051a4382c0d769d5af9c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://07ad686ba75e54cfce3c35a59f7e5c20f7cc2820298e2ee9141c82d7f9004071\",\"dweb:/ipfs/QmdpGryK5jNrAdrzVuubmWzB7ew4nYS4zkpNMU3PMJP7Ty\"]},\"src/Verifier.sol\":{\"keccak256\":\"0x9ec0e67cae93ccde43c398bf650a38cfcb82856585275bbd618dd472ae547f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dca5c7b217091f8b7f8073e6a30c69878b323fbe153e58556ea7fa6445b35672\",\"dweb:/ipfs/QmPGdPmbztJkbrtX7zBahNps1s7HEpTzfdxLzPiReA3E3v\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_depostiAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract Verifier",
              "name": "_verifier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FIELD_SIZE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROOT_HISTORY_SIZE",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ZERO_VALUE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "commitments",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRootIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "filledSubtrees",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IHasher",
              "name": "_hasher",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_left",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_right",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashLeftRight",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hasher",
          "outputs": [
            {
              "internalType": "contract IHasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isKnownRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "levels",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nullifierHashes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewardRelayer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "roots",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lensInteractor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLensInteractor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifier",
          "outputs": [
            {
              "internalType": "contract Verifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "nullifierHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "zeros",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getLastRoot()": {
            "details": "Returns the last root"
          },
          "hashLeftRight(address,bytes32,bytes32)": {
            "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
          },
          "isKnownRoot(bytes32)": {
            "details": "Whether the root is present in the root history"
          },
          "zeros(uint256)": {
            "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Pool.sol": "Pool"
      },
      "libraries": {}
    },
    "sources": {
      "src/MerkleTreeWithHistory.sol": {
        "keccak256": "0x4684baad582f7eed0665f7dfd7ff74936c010e9968588e339c374aa0e38fd6bc",
        "urls": [
          "bzz-raw://0a12eb60d274f19d0f8240a49f9666b621d64efd2d2f6da046f6f312f36f88fb",
          "dweb:/ipfs/QmSfYXBpTftctnaRbxPgCgDdCnY735DZo5SkAKy4rMc8NV"
        ],
        "license": "MIT"
      },
      "src/Pool.sol": {
        "keccak256": "0x443b54e00a23d2048dfd87624cb7e87132afc280c7b0051a4382c0d769d5af9c",
        "urls": [
          "bzz-raw://07ad686ba75e54cfce3c35a59f7e5c20f7cc2820298e2ee9141c82d7f9004071",
          "dweb:/ipfs/QmdpGryK5jNrAdrzVuubmWzB7ew4nYS4zkpNMU3PMJP7Ty"
        ],
        "license": "UNLICENSED"
      },
      "src/Verifier.sol": {
        "keccak256": "0x9ec0e67cae93ccde43c398bf650a38cfcb82856585275bbd618dd472ae547f27",
        "urls": [
          "bzz-raw://dca5c7b217091f8b7f8073e6a30c69878b323fbe153e58556ea7fa6445b35672",
          "dweb:/ipfs/QmPGdPmbztJkbrtX7zBahNps1s7HEpTzfdxLzPiReA3E3v"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Pool.sol",
    "id": 24218,
    "exportedSymbols": {
      "IHasher": [
        23381
      ],
      "MerkleTreeWithHistory": [
        24039
      ],
      "Pairing": [
        24488
      ],
      "Pool": [
        24217
      ],
      "Verifier": [
        24849
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1601:10",
    "nodes": [
      {
        "id": 24041,
        "nodeType": "PragmaDirective",
        "src": "39:24:10",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 24042,
        "nodeType": "ImportDirective",
        "src": "65:37:10",
        "absolutePath": "src/MerkleTreeWithHistory.sol",
        "file": "./MerkleTreeWithHistory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24218,
        "sourceUnit": 24040,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24043,
        "nodeType": "ImportDirective",
        "src": "103:24:10",
        "absolutePath": "src/Verifier.sol",
        "file": "./Verifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24218,
        "sourceUnit": 24850,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24217,
        "nodeType": "ContractDefinition",
        "src": "129:1509:10",
        "nodes": [
          {
            "id": 24048,
            "nodeType": "VariableDeclaration",
            "src": "172:34:10",
            "constant": false,
            "functionSelector": "2b7ac3f3",
            "mutability": "immutable",
            "name": "verifier",
            "nameLocation": "198:8:10",
            "scope": 24217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$24849",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "id": 24047,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24046,
                "name": "Verifier",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24849,
                "src": "172:8:10"
              },
              "referencedDeclaration": 24849,
              "src": "172:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$24849",
                "typeString": "contract Verifier"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24050,
            "nodeType": "VariableDeclaration",
            "src": "210:31:10",
            "constant": false,
            "mutability": "immutable",
            "name": "depositAmount",
            "nameLocation": "228:13:10",
            "scope": 24217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24049,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "210:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24054,
            "nodeType": "VariableDeclaration",
            "src": "246:43:10",
            "constant": false,
            "functionSelector": "839df945",
            "mutability": "mutable",
            "name": "commitments",
            "nameLocation": "278:11:10",
            "scope": 24217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 24053,
              "keyType": {
                "id": 24051,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "254:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "246:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 24052,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "265:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 24058,
            "nodeType": "VariableDeclaration",
            "src": "293:47:10",
            "constant": false,
            "functionSelector": "17cc915c",
            "mutability": "mutable",
            "name": "nullifierHashes",
            "nameLocation": "325:15:10",
            "scope": 24217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 24057,
              "keyType": {
                "id": 24055,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "301:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "293:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 24056,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "312:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 24060,
            "nodeType": "VariableDeclaration",
            "src": "345:22:10",
            "constant": false,
            "mutability": "mutable",
            "name": "lensInteractor",
            "nameLocation": "353:14:10",
            "scope": 24217,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24059,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24083,
            "nodeType": "FunctionDefinition",
            "src": "372:202:10",
            "body": {
              "id": 24082,
              "nodeType": "Block",
              "src": "507:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 24076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24074,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24050,
                      "src": "513:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24075,
                      "name": "_depostiAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24062,
                      "src": "529:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "513:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24077,
                  "nodeType": "ExpressionStatement",
                  "src": "513:30:10"
                },
                {
                  "expression": {
                    "id": 24080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24078,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24048,
                      "src": "549:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$24849",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24079,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24065,
                      "src": "560:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$24849",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "549:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$24849",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 24081,
                  "nodeType": "ExpressionStatement",
                  "src": "549:20:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "3230",
                    "id": 24068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "450:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  {
                    "arguments": [
                      {
                        "hexValue": "307838333538346638336632366146346544444139434265384337333062633837433336346232386665",
                        "id": 24070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "462:42:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x83584f83f26aF4eDDA9CBe8C730bc87C364b28fe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24069,
                      "name": "IHasher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23381,
                      "src": "454:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IHasher_$23381_$",
                        "typeString": "type(contract IHasher)"
                      }
                    },
                    "id": 24071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$23381",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 24072,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24067,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24039,
                  "src": "428:21:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "428:78:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 24066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24062,
                  "mutability": "mutable",
                  "name": "_depostiAmount",
                  "nameLocation": "392:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24083,
                  "src": "384:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24065,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "417:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24083,
                  "src": "408:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Verifier_$24849",
                    "typeString": "contract Verifier"
                  },
                  "typeName": {
                    "id": 24064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24063,
                      "name": "Verifier",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24849,
                      "src": "408:8:10"
                    },
                    "referencedDeclaration": 24849,
                    "src": "408:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$24849",
                      "typeString": "contract Verifier"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:44:10"
            },
            "returnParameters": {
              "id": 24073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:0:10"
            },
            "scope": 24217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24111,
            "nodeType": "FunctionDefinition",
            "src": "578:225:10",
            "body": {
              "id": 24110,
              "nodeType": "Block",
              "src": "632:171:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24089,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "646:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "646:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24091,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24050,
                          "src": "659:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "646:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206465706f73697420616d6f756e74",
                        "id": 24093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "674:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        },
                        "value": "Wrong deposit amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        }
                      ],
                      "id": 24088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "638:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:59:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24095,
                  "nodeType": "ExpressionStatement",
                  "src": "638:59:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "711:24:10",
                        "subExpression": {
                          "baseExpression": {
                            "id": 24097,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24054,
                            "src": "712:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 24099,
                          "indexExpression": {
                            "id": 24098,
                            "name": "commitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24085,
                            "src": "724:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "712:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861736820616c726561647920696e636c75646564",
                        "id": 24101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "737:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        },
                        "value": "Hash already included"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        }
                      ],
                      "id": 24096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "703:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24103,
                  "nodeType": "ExpressionStatement",
                  "src": "703:58:10"
                },
                {
                  "expression": {
                    "id": 24108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24104,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24054,
                        "src": "768:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 24106,
                      "indexExpression": {
                        "id": 24105,
                        "name": "commitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24085,
                        "src": "780:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "768:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 24107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "794:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "768:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24109,
                  "nodeType": "ExpressionStatement",
                  "src": "768:30:10"
                }
              ]
            },
            "functionSelector": "b214faa5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "587:7:10",
            "parameters": {
              "id": 24086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24085,
                  "mutability": "mutable",
                  "name": "commitment",
                  "nameLocation": "603:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24111,
                  "src": "595:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24084,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "594:20:10"
            },
            "returnParameters": {
              "id": 24087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:0:10"
            },
            "scope": 24217,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24165,
            "nodeType": "FunctionDefinition",
            "src": "807:429:10",
            "body": {
              "id": 24164,
              "nodeType": "Block",
              "src": "908:328:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "924:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "924:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24123,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24060,
                          "src": "938:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "924:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 24125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "954:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 24120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "916:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24127,
                  "nodeType": "ExpressionStatement",
                  "src": "916:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "984:31:10",
                        "subExpression": {
                          "baseExpression": {
                            "id": 24129,
                            "name": "nullifierHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24058,
                            "src": "985:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 24131,
                          "indexExpression": {
                            "id": 24130,
                            "name": "nullifierHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24117,
                            "src": "1001:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "985:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479207370656e74",
                        "id": 24133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1017:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d37c5f43e9e494a7c40ce4c4f61ac33e8b862c5b02cda3180dc028809bddcdb3",
                          "typeString": "literal_string \"Already spent\""
                        },
                        "value": "Already spent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d37c5f43e9e494a7c40ce4c4f61ac33e8b862c5b02cda3180dc028809bddcdb3",
                          "typeString": "literal_string \"Already spent\""
                        }
                      ],
                      "id": 24128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "976:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24135,
                  "nodeType": "ExpressionStatement",
                  "src": "976:57:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24138,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24115,
                            "src": "1059:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 24137,
                          "name": "isKnownRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23726,
                          "src": "1047:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view returns (bool)"
                          }
                        },
                        "id": 24139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1047:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520726f6f74",
                        "id": 24140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5",
                          "typeString": "literal_string \"Invalid merkle root\""
                        },
                        "value": "Invalid merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5",
                          "typeString": "literal_string \"Invalid merkle root\""
                        }
                      ],
                      "id": 24136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1039:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24142,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:49:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24146,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24113,
                        "src": "1140:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 24149,
                                "name": "root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24115,
                                "src": "1156:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 24148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1148:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24147,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1148:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1148:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 24153,
                                "name": "nullifierHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24117,
                                "src": "1171:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 24152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1163:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24151,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1163:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1163:22:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 24155,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1147:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "expression": {
                        "id": 24143,
                        "name": "verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24048,
                        "src": "1119:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Verifier_$24849",
                          "typeString": "contract Verifier"
                        }
                      },
                      "id": 24145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24848,
                      "src": "1119:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory,uint256[2] memory) view external returns (bool)"
                      }
                    },
                    "id": 24156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24157,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:68:10"
                },
                {
                  "expression": {
                    "id": 24162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24158,
                        "name": "nullifierHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24058,
                        "src": "1194:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 24160,
                      "indexExpression": {
                        "id": 24159,
                        "name": "nullifierHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24117,
                        "src": "1210:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1194:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 24161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1194:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24163,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:37:10"
                }
              ]
            },
            "functionSelector": "ab750e75",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "816:6:10",
            "parameters": {
              "id": 24118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24113,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "843:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24165,
                  "src": "828:20:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24112,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24115,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "863:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24165,
                  "src": "855:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24117,
                  "mutability": "mutable",
                  "name": "nullifierHash",
                  "nameLocation": "881:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24165,
                  "src": "873:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24116,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:76:10"
            },
            "returnParameters": {
              "id": 24119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:10"
            },
            "scope": 24217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24197,
            "nodeType": "FunctionDefinition",
            "src": "1240:245:10",
            "body": {
              "id": 24196,
              "nodeType": "Block",
              "src": "1289:196:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1303:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1303:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24173,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24060,
                          "src": "1317:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1303:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 24175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 24170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1295:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24177,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:54:10"
                },
                {
                  "assignments": [
                    24179,
                    24181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24179,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1362:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24196,
                      "src": "1357:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 24178,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1357:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24181,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1381:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24196,
                      "src": "1368:17:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 24180,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1368:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24188,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 24186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1424:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 24182,
                          "name": "relayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24167,
                          "src": "1389:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1389:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 24185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 24184,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24050,
                          "src": "1409:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1389:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 24187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1389:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1356:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24190,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24179,
                        "src": "1441:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 24191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 24189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1433:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24193,
                  "nodeType": "ExpressionStatement",
                  "src": "1433:37:10"
                },
                {
                  "expression": {
                    "id": 24194,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24181,
                    "src": "1476:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 24195,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:4:10"
                }
              ]
            },
            "functionSelector": "95bbe4e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardRelayer",
            "nameLocation": "1249:13:10",
            "parameters": {
              "id": 24168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24167,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nameLocation": "1271:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24197,
                  "src": "1263:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:17:10"
            },
            "returnParameters": {
              "id": 24169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:0:10"
            },
            "scope": 24217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24216,
            "nodeType": "FunctionDefinition",
            "src": "1489:147:10",
            "body": {
              "id": 24215,
              "nodeType": "Block",
              "src": "1550:86:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24203,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24060,
                          "src": "1564:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1590:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1582:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24204,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1582:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1582:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1564:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1556:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24210,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:37:10"
                },
                {
                  "expression": {
                    "id": 24213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24211,
                      "name": "lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24060,
                      "src": "1599:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24212,
                      "name": "_lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24199,
                      "src": "1616:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1599:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24214,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:32:10"
                }
              ]
            },
            "functionSelector": "45af8858",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLensInteractor",
            "nameLocation": "1498:17:10",
            "parameters": {
              "id": 24200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24199,
                  "mutability": "mutable",
                  "name": "_lensInteractor",
                  "nameLocation": "1524:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24216,
                  "src": "1516:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1515:25:10"
            },
            "returnParameters": {
              "id": 24201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:10"
            },
            "scope": 24217,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24044,
              "name": "MerkleTreeWithHistory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24039,
              "src": "146:21:10"
            },
            "id": 24045,
            "nodeType": "InheritanceSpecifier",
            "src": "146:21:10"
          }
        ],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24217,
          24039
        ],
        "name": "Pool",
        "nameLocation": "138:4:10",
        "scope": 24218,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 10
}