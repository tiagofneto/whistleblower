{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depostiAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "rewardRelayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lensInteractor",
          "type": "address"
        }
      ],
      "name": "setLensInteractor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "word",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "verify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "104:1374:8:-:0;;;1750:34:7;;;-1:-1:-1;;;;;;1788:27:7;;;309:156:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;367:2;379:42;1871:59:7;;;;;;;;;;;1954:2;1944:7;:12;;;1936:55;;;;-1:-1:-1;;;1936:55:7;;809:2:11;1936:55:7;;;791:21:11;848:2;828:18;;;821:30;887:32;867:18;;;860:60;937:18;;1936:55:7;607:354:11;1936:55:7;1997:6;:16;;-1:-1:-1;;1997:16:7;;;;;;;-1:-1:-1;;;;;2019:16:7;;;;2042:80;2065:7;2061:11;;:1;:11;;;2042:80;;;2107:8;;;;:5;:8::i;:::-;2087:17;;;;;;;:14;:17;;;;;:28;2102:1;2074:3;2102:1;2074:3;:::i;:::-;;;;2042:80;;;-1:-1:-1;2139:18:7;2145:11;2155:1;2145:7;:11;:::i;:::-;2139:18;;:5;:18::i;:::-;2128:8;;;:5;:8;;;:29;-1:-1:-1;;430:30:8::1;::::0;104:1374;;4297:3478:7;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:7;;1732:2:11;7741:29:7;;;1714:21:11;1771:2;1751:18;;;1744:30;1810:21;1790:18;;;1783:49;1849:18;;7741:29:7;1530:343:11;14:184;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:11;;14:184;-1:-1:-1;14:184:11:o;966:127::-;1027:10;1022:3;1018:20;1015:1;1008:31;1058:4;1055:1;1048:15;1082:4;1079:1;1072:15;1098:201;1136:3;1164:10;1209:2;1202:5;1198:14;1236:2;1227:7;1224:15;1221:41;;1242:18;;:::i;:::-;1291:1;1278:15;;1098:201;-1:-1:-1;;;1098:201:11:o;1304:221::-;1343:4;1372:10;1432;;;;1402;;1454:12;;;1451:38;;;1469:18;;:::i;:::-;1506:13;;1304:221;-1:-1:-1;;;1304:221:11:o;1530:343::-;104:1374:8;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101145760003560e01c806395bbe4e7116100a0578063e829558811610064578063e82955881461032e578063ec7329591461034e578063ed33639f14610382578063f178e47c146103ce578063fc7e9c6f146103fb57600080fd5b806395bbe4e71461028f578063b214faa5146102af578063ba70f757146102c2578063c2b40ae4146102ec578063cd87a3b41461031957600080fd5b80634ecf518b116100e75780634ecf518b146101d05780636d9833e314610202578063839df945146102225780638ea3099e1461025257806390eeb02b1461027257600080fd5b8063131017081461011957806317cc915c1461013b578063414a37ba1461018057806345af8858146101b0575b600080fd5b34801561012557600080fd5b5061013961013436600461104f565b610420565b005b34801561014757600080fd5b5061016b6101563660046110f5565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561018c57600080fd5b506101a26000805160206111d283398151915281565b604051908152602001610177565b3480156101bc57600080fd5b506101396101cb366004611126565b610528565b3480156101dc57600080fd5b506000546101ed9063ffffffff1681565b60405163ffffffff9091168152602001610177565b34801561020e57600080fd5b5061016b61021d3660046110f5565b610560565b34801561022e57600080fd5b5061016b61023d3660046110f5565b60046020526000908152604090205460ff1681565b34801561025e57600080fd5b506101a261026d36600461114a565b6105de565b34801561027e57600080fd5b506003546101ed9063ffffffff1681565b34801561029b57600080fd5b506101396102aa366004611126565b6107ab565b6101396102bd3660046110f5565b6108b6565b3480156102ce57600080fd5b5060035463ffffffff166000908152600260205260409020546101a2565b3480156102f857600080fd5b506101a26103073660046110f5565b60026020526000908152604090205481565b34801561032557600080fd5b506101ed601e81565b34801561033a57600080fd5b506101a26103493660046110f5565b61098e565b34801561035a57600080fd5b506101a27f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561038e57600080fd5b506103b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610177565b3480156103da57600080fd5b506101a26103e93660046110f5565b60016020526000908152604090205481565b34801561040757600080fd5b506003546101ed90640100000000900463ffffffff1681565b6006546001600160a01b0316331461046f5760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b60448201526064015b60405180910390fd5b60008181526005602052604090205460ff16156104be5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481cdc195b9d609a1b6044820152606401610466565b6104c782610560565b6105095760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081b595c9adb19481c9bdbdd606a1b6044820152606401610466565b6000908152600560205260409020805460ff1916600117905550505050565b6006546001600160a01b03161561053e57600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600081810361057157506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484036105a2575060019392505050565b8063ffffffff166000036105b45750601e5b806105be8161117f565b9150508163ffffffff168163ffffffff160361057c575060009392505050565b60006000805160206111d2833981519152831061063d5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610466565b6000805160206111d283398151915282106106a45760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610466565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906111ad565b90925090506000805160206111d283398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a091906111ad565b509695505050505050565b6006546001600160a01b031633146107f55760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b6044820152606401610466565b600080826001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000060405160006040518083038185875af1925050503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b5091509150816108b15760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610466565b505050565b7f0000000000000000000000000000000000000000000000000000000000000000341461091c5760405162461bcd60e51b815260206004820152601460248201527315dc9bdb99c819195c1bdcda5d08185b5bdd5b9d60621b6044820152606401610466565b60008181526004602052604090205460ff16156109735760405162461bcd60e51b815260206004820152601560248201527412185cda08185b1c9958591e481a5b98db1d591959605a1b6044820152606401610466565b6000908152600460205260409020805460ff19166001179055565b6000816000036109bf57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001036109ee57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d919050565b81600203610a1d57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200919050565b81600303610a4c57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb919050565b81600403610a7b57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9919050565b81600503610aaa57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959919050565b81600603610ad957507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c919050565b81600703610b0857507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4919050565b81600803610b3757507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80919050565b81600903610b6557507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007919050565b81600a03610b9457507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30919050565b81600b03610bc357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5919050565b81600c03610bf257507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f919050565b81600d03610c2157507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd919050565b81600e03610c5057507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108919050565b81600f03610c7f57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6919050565b81601003610cae57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854919050565b81601103610cdd57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea919050565b81601203610d0c57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d919050565b81601303610d3b57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05919050565b81601403610d6a57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4919050565b81601503610d9957507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967919050565b81601603610dc857507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453919050565b81601703610df757507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48919050565b81601803610e2657507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1919050565b81601903610e5557507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c919050565b81601a03610e8457507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99919050565b81601b03610eb357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354919050565b81601c03610ee157507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d919050565b81601d03610f1057507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427919050565b81601e03610f3f57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb919050565b81601f03610f6e57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610466565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610fd357600080fd5b813567ffffffffffffffff80821115610fee57610fee610fac565b604051601f8301601f19908116603f0116810190828211818310171561101657611016610fac565b8160405283815286602085880101111561102f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060006080868803121561106757600080fd5b853567ffffffffffffffff8082111561107f57600080fd5b818801915088601f83011261109357600080fd5b8135818111156110a257600080fd5b8960208285010111156110b457600080fd5b6020928301975095509087013590808211156110cf57600080fd5b506110dc88828901610fc2565b9598949750949560408101359550606001359392505050565b60006020828403121561110757600080fd5b5035919050565b6001600160a01b038116811461112357600080fd5b50565b60006020828403121561113857600080fd5b81356111438161110e565b9392505050565b60008060006060848603121561115f57600080fd5b833561116a8161110e565b95602085013595506040909401359392505050565b600063ffffffff8216806111a357634e487b7160e01b600052601160045260246000fd5b6000190192915050565b600080604083850312156111c057600080fd5b50508051602090910151909290915056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212202f3caf5e598e56dd72a0fc54f5709231ae41d1e0a5c297a29b556c8d5219a39664736f6c634300080f0033",
    "sourceMap": "104:1374:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:378;;;;;;;;;;-1:-1:-1;698:378:8;;;;;:::i;:::-;;:::i;:::-;;230:47;;;;;;;;;;-1:-1:-1;230:47:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2159:14:11;;2152:22;2134:41;;2122:2;2107:18;230:47:8;;;;;;;;979:114:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;979:114:7;;;;;2332:25:11;;;2320:2;2305:18;979:114:7;2186:177:11;1329:147:8;;;;;;;;;;-1:-1:-1;1329:147:8;;;;;:::i;:::-;;:::i;1290:20:7:-;;;;;;;;;;-1:-1:-1;1290:20:7;;;;;;;;;;;2930:10:11;2918:23;;;2900:42;;2888:2;2873:18;1290:20:7;2756:192:11;3678:394:7;;;;;;;;;;-1:-1:-1;3678:394:7;;;;;:::i;:::-;;:::i;183:43:8:-;;;;;;;;;;-1:-1:-1;183:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;2234:480:7;;;;;;;;;;-1:-1:-1;2234:480:7;;;;;:::i;:::-;;:::i;1750:34::-;;;;;;;;;;-1:-1:-1;1750:34:7;;;;;;;;1080:245:8;;;;;;;;;;-1:-1:-1;1080:245:8;;;;;:::i;:::-;;:::i;469:225::-;;;;;;:::i;:::-;;:::i;4118:94:7:-;;;;;;;;;;-1:-1:-1;4190:16:7;;;;4162:7;4184:23;;;:5;:23;;;;;;4118:94;;1657:40;;;;;;;;;;-1:-1:-1;1657:40:7;;;;;:::i;:::-;;;;;;;;;;;;;;1701:45;;;;;;;;;;;;1744:2;1701:45;;4297:3478;;;;;;;;;;-1:-1:-1;4297:3478:7;;;;;:::i;:::-;;:::i;1097:114::-;;;;;;;;;;;;1134:77;1097:114;;1254:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3906:32:11;;;3888:51;;3876:2;3861:18;1254:31:7;3725:220:11;1604:49:7;;;;;;;;;;-1:-1:-1;1604:49:7;;;;;:::i;:::-;;;;;;;;;;;;;;1788:27;;;;;;;;;;-1:-1:-1;1788:27:7;;;;;;;;;;;698:378:8;853:14;;-1:-1:-1;;;;;853:14:8;839:10;:28;831:54;;;;-1:-1:-1;;;831:54:8;;4152:2:11;831:54:8;;;4134:21:11;4191:2;4171:18;;;4164:30;-1:-1:-1;;;4210:18:11;;;4203:43;4263:18;;831:54:8;;;;;;;;;900:30;;;;:15;:30;;;;;;;;899:31;891:57;;;;-1:-1:-1;;;891:57:8;;4494:2:11;891:57:8;;;4476:21:11;4533:2;4513:18;;;4506:30;-1:-1:-1;;;4552:18:11;;;4545:43;4605:18;;891:57:8;4292:337:11;891:57:8;962:17;974:4;962:11;:17::i;:::-;954:49;;;;-1:-1:-1;;;954:49:8;;4836:2:11;954:49:8;;;4818:21:11;4875:2;4855:18;;;4848:30;-1:-1:-1;;;4894:18:11;;;4887:49;4953:18;;954:49:8;4634:343:11;954:49:8;1034:30;;;;:15;:30;;;;;:37;;-1:-1:-1;;1034:37:8;1067:4;1034:37;;;-1:-1:-1;;;;698:378:8:o;1329:147::-;1404:14;;-1:-1:-1;;;;;1404:14:8;:28;1396:37;;;;;;1439:14;:32;;-1:-1:-1;;;;;;1439:32:8;-1:-1:-1;;;;;1439:32:8;;;;;;;;;;1329:147::o;3678:394:7:-;3735:4;3751:10;;;3747:43;;-1:-1:-1;3778:5:7;;3678:394;-1:-1:-1;3678:394:7:o;3747:43::-;3822:16;;;;;3878:172;3902:8;;;;;;;:5;:8;;;;;;3893:17;;3889:53;;-1:-1:-1;3929:4:7;;3678:394;-1:-1:-1;;;3678:394:7:o;3889:53::-;3953:1;:6;;3958:1;3953:6;3949:52;;-1:-1:-1;1744:2:7;3949:52;4008:3;;;;:::i;:::-;;;;4031:17;4026:22;;:1;:22;;;3878:172;;-1:-1:-1;4062:5:7;;3678:394;-1:-1:-1;;;3678:394:7:o;2234:480::-;2342:7;-1:-1:-1;;;;;;;;;;;2365:27:7;;2357:72;;;;-1:-1:-1;;;2357:72:7;;5471:2:11;2357:72:7;;;5453:21:11;;;5490:18;;;5483:30;5549:34;5529:18;;;5522:62;5601:18;;2357:72:7;5269:356:11;2357:72:7;-1:-1:-1;;;;;;;;;;;2443:28:7;;2435:74;;;;-1:-1:-1;;;2435:74:7;;5832:2:11;2435:74:7;;;5814:21:11;5871:2;5851:18;;;5844:30;5910:34;5890:18;;;5883:62;-1:-1:-1;;;5961:18:11;;;5954:31;6002:19;;2435:74:7;5630:397:11;2435:74:7;2575:24;;-1:-1:-1;;;2575:24:7;;;;;6206:25:11;;;2515:9:7;6247:18:11;;;6240:34;;;2535:5:7;;-1:-1:-1;;;;;2575:18:7;;;;;6179::11;;2575:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2566:33;;-1:-1:-1;2566:33:7;-1:-1:-1;;;;;;;;;;;;2627:6:7;2616:1;2609:38;2662:24;;-1:-1:-1;;;2662:24:7;;;;;6206:25:11;;;6247:18;;;6240:34;;;2605:42:7;;-1:-1:-1;;;;;;2662:18:7;;;;;6179::11;;2662:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2653:33:7;2234:480;-1:-1:-1;;;;;;2234:480:7:o;1080:245:8:-;1157:14;;-1:-1:-1;;;;;1157:14:8;1143:10;:28;1135:54;;;;-1:-1:-1;;;1135:54:8;;4152:2:11;1135:54:8;;;4134:21:11;4191:2;4171:18;;;4164:30;-1:-1:-1;;;4210:18:11;;;4203:43;4263:18;;1135:54:8;3950:337:11;1135:54:8;1197:9;1208:17;1229:7;-1:-1:-1;;;;;1229:12:8;1249:13;1229:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:71;;;;1281:4;1273:37;;;;-1:-1:-1;;;1273:37:8;;7079:2:11;1273:37:8;;;7061:21:11;7118:2;7098:18;;;7091:30;-1:-1:-1;;;7137:18:11;;;7130:50;7197:18;;1273:37:8;6877:344:11;1273:37:8;1129:196;;1080:245;:::o;469:225::-;550:13;537:9;:26;529:59;;;;-1:-1:-1;;;529:59:8;;7428:2:11;529:59:8;;;7410:21:11;7467:2;7447:18;;;7440:30;-1:-1:-1;;;7486:18:11;;;7479:50;7546:18;;529:59:8;7226:344:11;529:59:8;603:23;;;;:11;:23;;;;;;;;602:24;594:58;;;;-1:-1:-1;;;594:58:8;;7777:2:11;594:58:8;;;7759:21:11;7816:2;7796:18;;;7789:30;-1:-1:-1;;;7835:18:11;;;7828:51;7896:18;;594:58:8;7575:345:11;594:58:8;659:23;;;;:11;:23;;;;;:30;;-1:-1:-1;;659:30:8;685:4;659:30;;;469:225::o;4297:3478:7:-;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:7;;4297:3478;-1:-1:-1;4297:3478:7:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:7;;8127:2:11;7741:29:7;;;8109:21:11;8166:2;8146:18;;;8139:30;-1:-1:-1;;;8185:18:11;;;8178:49;8244:18;;7741:29:7;7925:343:11;14:127;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:11;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:934::-;977:6;985;993;1001;1009;1062:3;1050:9;1041:7;1037:23;1033:33;1030:53;;;1079:1;1076;1069:12;1030:53;1119:9;1106:23;1148:18;1189:2;1181:6;1178:14;1175:34;;;1205:1;1202;1195:12;1175:34;1243:6;1232:9;1228:22;1218:32;;1288:7;1281:4;1277:2;1273:13;1269:27;1259:55;;1310:1;1307;1300:12;1259:55;1350:2;1337:16;1376:2;1368:6;1365:14;1362:34;;;1392:1;1389;1382:12;1362:34;1439:7;1432:4;1423:6;1419:2;1415:15;1411:26;1408:39;1405:59;;;1460:1;1457;1450:12;1405:59;1491:4;1483:13;;;;-1:-1:-1;1515:6:11;-1:-1:-1;1559:20:11;;;1546:34;;1592:16;;;1589:36;;;1621:1;1618;1611:12;1589:36;;1644:52;1688:7;1677:8;1666:9;1662:24;1644:52;:::i;:::-;870:934;;;;-1:-1:-1;1634:62:11;;1743:2;1728:18;;1715:32;;-1:-1:-1;1794:2:11;1779:18;1766:32;;870:934;-1:-1:-1;;;870:934:11:o;1809:180::-;1868:6;1921:2;1909:9;1900:7;1896:23;1892:32;1889:52;;;1937:1;1934;1927:12;1889:52;-1:-1:-1;1960:23:11;;1809:180;-1:-1:-1;1809:180:11:o;2368:131::-;-1:-1:-1;;;;;2443:31:11;;2433:42;;2423:70;;2489:1;2486;2479:12;2423:70;2368:131;:::o;2504:247::-;2563:6;2616:2;2604:9;2595:7;2591:23;2587:32;2584:52;;;2632:1;2629;2622:12;2584:52;2671:9;2658:23;2690:31;2715:5;2690:31;:::i;:::-;2740:5;2504:247;-1:-1:-1;;;2504:247:11:o;2953:400::-;3047:6;3055;3063;3116:2;3104:9;3095:7;3091:23;3087:32;3084:52;;;3132:1;3129;3122:12;3084:52;3171:9;3158:23;3190:31;3215:5;3190:31;:::i;:::-;3240:5;3292:2;3277:18;;3264:32;;-1:-1:-1;3343:2:11;3328:18;;;3315:32;;2953:400;-1:-1:-1;;;2953:400:11:o;4982:282::-;5020:3;5064:10;5057:5;5053:22;5094:7;5084:138;;5144:10;5139:3;5135:20;5132:1;5125:31;5179:4;5176:1;5169:15;5207:4;5204:1;5197:15;5084:138;-1:-1:-1;;5238:20:11;;4982:282;-1:-1:-1;;4982:282:11:o;6285:245::-;6364:6;6372;6425:2;6413:9;6404:7;6400:23;6396:32;6393:52;;;6441:1;6438;6431:12;6393:52;-1:-1:-1;;6464:16:11;;6520:2;6505:18;;;6499:25;6464:16;;6499:25;;-1:-1:-1;6285:245:11:o",
    "linkReferences": {},
    "immutableReferences": {
      "17685": [
        {
          "start": 916,
          "length": 32
        }
      ],
      "18341": [
        {
          "start": 2052,
          "length": 32
        },
        {
          "start": 2232,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FIELD_SIZE()": "414a37ba",
    "ROOT_HISTORY_SIZE()": "cd87a3b4",
    "ZERO_VALUE()": "ec732959",
    "commitments(bytes32)": "839df945",
    "currentRootIndex()": "90eeb02b",
    "deposit(bytes32)": "b214faa5",
    "filledSubtrees(uint256)": "f178e47c",
    "getLastRoot()": "ba70f757",
    "hashLeftRight(address,bytes32,bytes32)": "8ea3099e",
    "hasher()": "ed33639f",
    "isKnownRoot(bytes32)": "6d9833e3",
    "levels()": "4ecf518b",
    "nextIndex()": "fc7e9c6f",
    "nullifierHashes(bytes32)": "17cc915c",
    "rewardRelayer(address)": "95bbe4e7",
    "roots(uint256)": "c2b40ae4",
    "setLensInteractor(address)": "45af8858",
    "verify(bytes,string,bytes32,bytes32)": "13101708",
    "zeros(uint256)": "e8295588"
  },
  "ast": {
    "absolutePath": "src/Pool.sol",
    "id": 18489,
    "exportedSymbols": {
      "IHasher": [
        17676
      ],
      "MerkleTreeWithHistory": [
        18334
      ],
      "Pool": [
        18488
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1441:8",
    "nodes": [
      {
        "id": 18336,
        "nodeType": "PragmaDirective",
        "src": "39:24:8",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 18337,
        "nodeType": "ImportDirective",
        "src": "65:37:8",
        "absolutePath": "src/MerkleTreeWithHistory.sol",
        "file": "./MerkleTreeWithHistory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18489,
        "sourceUnit": 18335,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 18488,
        "nodeType": "ContractDefinition",
        "src": "104:1374:8",
        "nodes": [
          {
            "id": 18341,
            "nodeType": "VariableDeclaration",
            "src": "147:31:8",
            "constant": false,
            "mutability": "immutable",
            "name": "depositAmount",
            "nameLocation": "165:13:8",
            "scope": 18488,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "147:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18345,
            "nodeType": "VariableDeclaration",
            "src": "183:43:8",
            "constant": false,
            "functionSelector": "839df945",
            "mutability": "mutable",
            "name": "commitments",
            "nameLocation": "215:11:8",
            "scope": 18488,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 18344,
              "keyType": {
                "id": 18342,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "191:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "183:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 18343,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "202:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 18349,
            "nodeType": "VariableDeclaration",
            "src": "230:47:8",
            "constant": false,
            "functionSelector": "17cc915c",
            "mutability": "mutable",
            "name": "nullifierHashes",
            "nameLocation": "262:15:8",
            "scope": 18488,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 18348,
              "keyType": {
                "id": 18346,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "238:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "230:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 18347,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "249:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 18351,
            "nodeType": "VariableDeclaration",
            "src": "282:22:8",
            "constant": false,
            "mutability": "mutable",
            "name": "lensInteractor",
            "nameLocation": "290:14:8",
            "scope": 18488,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18350,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18367,
            "nodeType": "FunctionDefinition",
            "src": "309:156:8",
            "body": {
              "id": 18366,
              "nodeType": "Block",
              "src": "424:41:8",
              "statements": [
                {
                  "expression": {
                    "id": 18364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18362,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18341,
                      "src": "430:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18363,
                      "name": "_depostiAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18353,
                      "src": "446:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "430:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18365,
                  "nodeType": "ExpressionStatement",
                  "src": "430:30:8"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "3230",
                    "id": 18356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "367:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  {
                    "arguments": [
                      {
                        "hexValue": "307838333538346638336632366146346544444139434265384337333062633837433336346232386665",
                        "id": 18358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "379:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x83584f83f26aF4eDDA9CBe8C730bc87C364b28fe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18357,
                      "name": "IHasher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17676,
                      "src": "371:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IHasher_$17676_$",
                        "typeString": "type(contract IHasher)"
                      }
                    },
                    "id": 18359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "371:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$17676",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 18360,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 18355,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18334,
                  "src": "345:21:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "345:78:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 18354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18353,
                  "mutability": "mutable",
                  "name": "_depostiAmount",
                  "nameLocation": "329:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18367,
                  "src": "321:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "320:24:8"
            },
            "returnParameters": {
              "id": 18361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:8"
            },
            "scope": 18488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18395,
            "nodeType": "FunctionDefinition",
            "src": "469:225:8",
            "body": {
              "id": 18394,
              "nodeType": "Block",
              "src": "523:171:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18373,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "537:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "537:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18375,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18341,
                          "src": "550:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "537:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206465706f73697420616d6f756e74",
                        "id": 18377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        },
                        "value": "Wrong deposit amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        }
                      ],
                      "id": 18372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "529:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "529:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18379,
                  "nodeType": "ExpressionStatement",
                  "src": "529:59:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "602:24:8",
                        "subExpression": {
                          "baseExpression": {
                            "id": 18381,
                            "name": "commitments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18345,
                            "src": "603:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 18383,
                          "indexExpression": {
                            "id": 18382,
                            "name": "commitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18369,
                            "src": "615:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "603:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861736820616c726561647920696e636c75646564",
                        "id": 18385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "628:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        },
                        "value": "Hash already included"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        }
                      ],
                      "id": 18380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "594:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18387,
                  "nodeType": "ExpressionStatement",
                  "src": "594:58:8"
                },
                {
                  "expression": {
                    "id": 18392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18388,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18345,
                        "src": "659:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 18390,
                      "indexExpression": {
                        "id": 18389,
                        "name": "commitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18369,
                        "src": "671:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "659:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "685:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "659:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18393,
                  "nodeType": "ExpressionStatement",
                  "src": "659:30:8"
                }
              ]
            },
            "functionSelector": "b214faa5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "478:7:8",
            "parameters": {
              "id": 18370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18369,
                  "mutability": "mutable",
                  "name": "commitment",
                  "nameLocation": "494:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18395,
                  "src": "486:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18368,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:20:8"
            },
            "returnParameters": {
              "id": 18371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:8"
            },
            "scope": 18488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18436,
            "nodeType": "FunctionDefinition",
            "src": "698:378:8",
            "body": {
              "id": 18435,
              "nodeType": "Block",
              "src": "823:253:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18407,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "839:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "839:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18409,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18351,
                          "src": "853:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "839:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 18411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 18406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "831:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18413,
                  "nodeType": "ExpressionStatement",
                  "src": "831:54:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "899:31:8",
                        "subExpression": {
                          "baseExpression": {
                            "id": 18415,
                            "name": "nullifierHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18349,
                            "src": "900:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 18417,
                          "indexExpression": {
                            "id": 18416,
                            "name": "nullifierHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18403,
                            "src": "916:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "900:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479207370656e74",
                        "id": 18419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "932:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d37c5f43e9e494a7c40ce4c4f61ac33e8b862c5b02cda3180dc028809bddcdb3",
                          "typeString": "literal_string \"Already spent\""
                        },
                        "value": "Already spent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d37c5f43e9e494a7c40ce4c4f61ac33e8b862c5b02cda3180dc028809bddcdb3",
                          "typeString": "literal_string \"Already spent\""
                        }
                      ],
                      "id": 18414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "891:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18421,
                  "nodeType": "ExpressionStatement",
                  "src": "891:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18424,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18401,
                            "src": "974:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 18423,
                          "name": "isKnownRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18021,
                          "src": "962:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view returns (bool)"
                          }
                        },
                        "id": 18425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "962:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520726f6f74",
                        "id": 18426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "981:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5",
                          "typeString": "literal_string \"Invalid merkle root\""
                        },
                        "value": "Invalid merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d274b7c53aa3438533a57db7a3ef116dc2993e8091274c7e53421a027e3bba5",
                          "typeString": "literal_string \"Invalid merkle root\""
                        }
                      ],
                      "id": 18422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "954:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18428,
                  "nodeType": "ExpressionStatement",
                  "src": "954:49:8"
                },
                {
                  "expression": {
                    "id": 18433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18429,
                        "name": "nullifierHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18349,
                        "src": "1034:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 18431,
                      "indexExpression": {
                        "id": 18430,
                        "name": "nullifierHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18403,
                        "src": "1050:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1034:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1067:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1034:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18434,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:37:8"
                }
              ]
            },
            "functionSelector": "13101708",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "707:6:8",
            "parameters": {
              "id": 18404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18397,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "734:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18436,
                  "src": "719:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18399,
                  "mutability": "mutable",
                  "name": "word",
                  "nameLocation": "760:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18436,
                  "src": "746:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18398,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18401,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "778:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18436,
                  "src": "770:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18400,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18403,
                  "mutability": "mutable",
                  "name": "nullifierHash",
                  "nameLocation": "796:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18436,
                  "src": "788:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18402,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:100:8"
            },
            "returnParameters": {
              "id": 18405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:0:8"
            },
            "scope": 18488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18468,
            "nodeType": "FunctionDefinition",
            "src": "1080:245:8",
            "body": {
              "id": 18467,
              "nodeType": "Block",
              "src": "1129:196:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1143:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1143:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18444,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18351,
                          "src": "1157:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1143:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 18446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1173:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 18441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1135:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18448,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:54:8"
                },
                {
                  "assignments": [
                    18450,
                    18452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18450,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1202:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 18467,
                      "src": "1197:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 18449,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1197:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18452,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1221:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 18467,
                      "src": "1208:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18451,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1208:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18459,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 18457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1264:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 18453,
                          "name": "relayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18438,
                          "src": "1229:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 18454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1229:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 18456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 18455,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18341,
                          "src": "1249:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1229:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 18458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1196:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18461,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18450,
                        "src": "1281:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 18462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 18460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1273:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18464,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:37:8"
                },
                {
                  "expression": {
                    "id": 18465,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18452,
                    "src": "1316:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 18466,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:4:8"
                }
              ]
            },
            "functionSelector": "95bbe4e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardRelayer",
            "nameLocation": "1089:13:8",
            "parameters": {
              "id": 18439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18438,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nameLocation": "1111:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18468,
                  "src": "1103:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1102:17:8"
            },
            "returnParameters": {
              "id": 18440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:0:8"
            },
            "scope": 18488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18487,
            "nodeType": "FunctionDefinition",
            "src": "1329:147:8",
            "body": {
              "id": 18486,
              "nodeType": "Block",
              "src": "1390:86:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18474,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18351,
                          "src": "1404:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1430:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1422:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18475,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1422:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1422:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1404:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1396:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:37:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18481,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:37:8"
                },
                {
                  "expression": {
                    "id": 18484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18482,
                      "name": "lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18351,
                      "src": "1439:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18483,
                      "name": "_lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18470,
                      "src": "1456:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1439:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18485,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:32:8"
                }
              ]
            },
            "functionSelector": "45af8858",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLensInteractor",
            "nameLocation": "1338:17:8",
            "parameters": {
              "id": 18471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18470,
                  "mutability": "mutable",
                  "name": "_lensInteractor",
                  "nameLocation": "1364:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 18487,
                  "src": "1356:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:25:8"
            },
            "returnParameters": {
              "id": 18472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:0:8"
            },
            "scope": 18488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18338,
              "name": "MerkleTreeWithHistory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18334,
              "src": "121:21:8"
            },
            "id": 18339,
            "nodeType": "InheritanceSpecifier",
            "src": "121:21:8"
          }
        ],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18488,
          18334
        ],
        "name": "Pool",
        "nameLocation": "113:4:8",
        "scope": 18489,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 8
}