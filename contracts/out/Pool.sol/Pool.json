{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depostiAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "rewardRelayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lensInteractor",
          "type": "address"
        }
      ],
      "name": "setLensInteractor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "verifyAndRemoveWord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "104:1170:9:-:0;;;1750:34:8;;;-1:-1:-1;;;;;;1788:27:8;;;254:156:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;312:2;324:42;1871:59:8;;;;;;;;;;;1954:2;1944:7;:12;;;1936:55;;;;-1:-1:-1;;;1936:55:8;;809:2:12;1936:55:8;;;791:21:12;848:2;828:18;;;821:30;887:32;867:18;;;860:60;937:18;;1936:55:8;607:354:12;1936:55:8;1997:6;:16;;-1:-1:-1;;1997:16:8;;;;;;;-1:-1:-1;;;;;2019:16:8;;;;2042:80;2065:7;2061:11;;:1;:11;;;2042:80;;;2107:8;;;;:5;:8::i;:::-;2087:17;;;;;;;:14;:17;;;;;:28;2102:1;2074:3;2102:1;2074:3;:::i;:::-;;;;2042:80;;;-1:-1:-1;2139:18:8;2145:11;2155:1;2145:7;:11;:::i;:::-;2139:18;;:5;:18::i;:::-;2128:8;;;:5;:8;;;:29;-1:-1:-1;;375:30:9::1;::::0;104:1170;;4297:3478:8;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:8;;1732:2:12;7741:29:8;;;1714:21:12;1771:2;1751:18;;;1744:30;1810:21;1790:18;;;1783:49;1849:18;;7741:29:8;1530:343:12;14:184;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:12;;14:184;-1:-1:-1;14:184:12:o;966:127::-;1027:10;1022:3;1018:20;1015:1;1008:31;1058:4;1055:1;1048:15;1082:4;1079:1;1072:15;1098:201;1136:3;1164:10;1209:2;1202:5;1198:14;1236:2;1227:7;1224:15;1221:41;;1242:18;;:::i;:::-;1291:1;1278:15;;1098:201;-1:-1:-1;;;1098:201:12:o;1304:221::-;1343:4;1372:10;1432;;;;1402;;1454:12;;;1451:38;;;1469:18;;:::i;:::-;1506:13;;1304:221;-1:-1:-1;;;1304:221:12:o;1530:343::-;104:1170:9;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c8063b214faa511610095578063e829558811610064578063e8295588146102b8578063ec732959146102d8578063ed33639f1461030c578063f178e47c14610358578063fc7e9c6f1461038557600080fd5b8063b214faa514610239578063ba70f7571461024c578063c2b40ae414610276578063cd87a3b4146102a357600080fd5b80636d9833e3116100d15780636d9833e3146101ac5780638ea3099e146101dc57806390eeb02b146101fc57806395bbe4e71461021957600080fd5b8063414a37ba1461010357806345af8858146101385780634ecf518b1461015a5780635436d4e81461018c575b600080fd5b34801561010f57600080fd5b506101256000805160206110f583398151915281565b6040519081526020015b60405180910390f35b34801561014457600080fd5b50610158610153366004610f2e565b6103aa565b005b34801561016657600080fd5b506000546101779063ffffffff1681565b60405163ffffffff909116815260200161012f565b34801561019857600080fd5b506101586101a7366004610f68565b6103e2565b3480156101b857600080fd5b506101cc6101c7366004611019565b6104ca565b604051901515815260200161012f565b3480156101e857600080fd5b506101256101f7366004611032565b610548565b34801561020857600080fd5b506003546101779063ffffffff1681565b34801561022557600080fd5b50610158610234366004610f2e565b610715565b610158610247366004611019565b610820565b34801561025857600080fd5b5060035463ffffffff16600090815260026020526040902054610125565b34801561028257600080fd5b50610125610291366004611019565b60026020526000908152604090205481565b3480156102af57600080fd5b50610177601e81565b3480156102c457600080fd5b506101256102d3366004611019565b6108f8565b3480156102e457600080fd5b506101257f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561031857600080fd5b506103407f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161012f565b34801561036457600080fd5b50610125610373366004611019565b60016020526000908152604090205481565b34801561039157600080fd5b5060035461017790640100000000900463ffffffff1681565b6005546001600160a01b0316156103c057600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146104315760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b60448201526064015b60405180910390fd5b6000816040516020016104449190611067565b60408051601f1981840301815291815281516020928301206000818152600490935291205490915060ff166104b15760405162461bcd60e51b815260206004820152601360248201527215dbdc99081a185cda081b9bdd08199bdd5b99606a1b6044820152606401610428565b6000908152600460205260409020805460ff1916905550565b60008181036104db57506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054840361050c575060019392505050565b8063ffffffff1660000361051e5750601e5b80610528816110a2565b9150508163ffffffff168163ffffffff16036104e6575060009392505050565b60006000805160206110f583398151915283106105a75760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610428565b6000805160206110f5833981519152821061060e5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610428565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068191906110d0565b90925090506000805160206110f583398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a91906110d0565b509695505050505050565b6005546001600160a01b0316331461075f5760405162461bcd60e51b815260206004820152600d60248201526c2737903832b936b4b9b9b4b7b760991b6044820152606401610428565b600080826001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000060405160006040518083038185875af1925050503d80600081146107cd576040519150601f19603f3d011682016040523d82523d6000602084013e6107d2565b606091505b50915091508161081b5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610428565b505050565b7f000000000000000000000000000000000000000000000000000000000000000034146108865760405162461bcd60e51b815260206004820152601460248201527315dc9bdb99c819195c1bdcda5d08185b5bdd5b9d60621b6044820152606401610428565b60008181526004602052604090205460ff16156108dd5760405162461bcd60e51b815260206004820152601560248201527412185cda08185b1c9958591e481a5b98db1d591959605a1b6044820152606401610428565b6000908152600460205260409020805460ff19166001179055565b60008160000361092957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160010361095857507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d919050565b8160020361098757507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200919050565b816003036109b657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb919050565b816004036109e557507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9919050565b81600503610a1457507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959919050565b81600603610a4357507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c919050565b81600703610a7257507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4919050565b81600803610aa157507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80919050565b81600903610acf57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007919050565b81600a03610afe57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30919050565b81600b03610b2d57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5919050565b81600c03610b5c57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f919050565b81600d03610b8b57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd919050565b81600e03610bba57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108919050565b81600f03610be957507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6919050565b81601003610c1857507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854919050565b81601103610c4757507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea919050565b81601203610c7657507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d919050565b81601303610ca557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05919050565b81601403610cd457507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4919050565b81601503610d0357507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967919050565b81601603610d3257507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453919050565b81601703610d6157507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48919050565b81601803610d9057507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1919050565b81601903610dbf57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c919050565b81601a03610dee57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99919050565b81601b03610e1d57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354919050565b81601c03610e4b57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d919050565b81601d03610e7a57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427919050565b81601e03610ea957507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb919050565b81601f03610ed857507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610428565b6001600160a01b0381168114610f2b57600080fd5b50565b600060208284031215610f4057600080fd5b8135610f4b81610f16565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610f7a57600080fd5b813567ffffffffffffffff80821115610f9257600080fd5b818401915084601f830112610fa657600080fd5b813581811115610fb857610fb8610f52565b604051601f8201601f19908116603f01168101908382118183101715610fe057610fe0610f52565b81604052828152876020848701011115610ff957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561102b57600080fd5b5035919050565b60008060006060848603121561104757600080fd5b833561105281610f16565b95602085013595506040909401359392505050565b6000825160005b81811015611088576020818601810151858301520161106e565b81811115611097576000828501525b509190910192915050565b600063ffffffff8216806110c657634e487b7160e01b600052601160045260246000fd5b6000190192915050565b600080604083850312156110e357600080fd5b50508051602090910151909290915056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122098e1248e595cdac041d914903b8ad4d201859003832b6ada50cacc109b32399c64736f6c634300080f0033",
    "sourceMap": "104:1170:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:114:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;979:114:8;;;;;160:25:12;;;148:2;133:18;979:114:8;;;;;;;;1125:147:9;;;;;;;;;;-1:-1:-1;1125:147:9;;;;;:::i;:::-;;:::i;:::-;;1290:20:8;;;;;;;;;;-1:-1:-1;1290:20:8;;;;;;;;;;;758:10:12;746:23;;;728:42;;716:2;701:18;1290:20:8;584:192:12;615:257:9;;;;;;;;;;-1:-1:-1;615:257:9;;;;;:::i;:::-;;:::i;3678:394:8:-;;;;;;;;;;-1:-1:-1;3678:394:8;;;;;:::i;:::-;;:::i;:::-;;;2190:14:12;;2183:22;2165:41;;2153:2;2138:18;3678:394:8;2025:187:12;2234:480:8;;;;;;;;;;-1:-1:-1;2234:480:8;;;;;:::i;:::-;;:::i;1750:34::-;;;;;;;;;;-1:-1:-1;1750:34:8;;;;;;;;876:245:9;;;;;;;;;;-1:-1:-1;876:245:9;;;;;:::i;:::-;;:::i;414:197::-;;;;;;:::i;:::-;;:::i;4118:94:8:-;;;;;;;;;;-1:-1:-1;4190:16:8;;;;4162:7;4184:23;;;:5;:23;;;;;;4118:94;;1657:40;;;;;;;;;;-1:-1:-1;1657:40:8;;;;;:::i;:::-;;;;;;;;;;;;;;1701:45;;;;;;;;;;;;1744:2;1701:45;;4297:3478;;;;;;;;;;-1:-1:-1;4297:3478:8;;;;;:::i;:::-;;:::i;1097:114::-;;;;;;;;;;;;1134:77;1097:114;;1254:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3170:32:12;;;3152:51;;3140:2;3125:18;1254:31:8;2989:220:12;1604:49:8;;;;;;;;;;-1:-1:-1;1604:49:8;;;;;:::i;:::-;;;;;;;;;;;;;;1788:27;;;;;;;;;;-1:-1:-1;1788:27:8;;;;;;;;;;;1125:147:9;1200:14;;-1:-1:-1;;;;;1200:14:9;:28;1192:37;;;;;;1235:14;:32;;-1:-1:-1;;;;;;1235:32:9;-1:-1:-1;;;;;1235:32:9;;;;;;;;;;1125:147::o;615:257::-;703:14;;-1:-1:-1;;;;;703:14:9;689:10;:28;681:54;;;;-1:-1:-1;;;681:54:9;;3416:2:12;681:54:9;;;3398:21:12;3455:2;3435:18;;;3428:30;-1:-1:-1;;;3474:18:12;;;3467:43;3527:18;;681:54:9;;;;;;;;;742:12;784:4;767:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;767:22:9;;;;;;;;;757:33;;767:22;757:33;;;;804:12;;;;:6;:12;;;;;;757:33;;-1:-1:-1;804:12:9;;796:44;;;;-1:-1:-1;;;796:44:9;;4191:2:12;796:44:9;;;4173:21:12;4230:2;4210:18;;;4203:30;-1:-1:-1;;;4249:18:12;;;4242:49;4308:18;;796:44:9;3989:343:12;796:44:9;862:5;847:12;;;:6;:12;;;;;:20;;-1:-1:-1;;847:20:9;;;-1:-1:-1;615:257:9:o;3678:394:8:-;3735:4;3751:10;;;3747:43;;-1:-1:-1;3778:5:8;;3678:394;-1:-1:-1;3678:394:8:o;3747:43::-;3822:16;;;;;3878:172;3902:8;;;;;;;:5;:8;;;;;;3893:17;;3889:53;;-1:-1:-1;3929:4:8;;3678:394;-1:-1:-1;;;3678:394:8:o;3889:53::-;3953:1;:6;;3958:1;3953:6;3949:52;;-1:-1:-1;1744:2:8;3949:52;4008:3;;;;:::i;:::-;;;;4031:17;4026:22;;:1;:22;;;3878:172;;-1:-1:-1;4062:5:8;;3678:394;-1:-1:-1;;;3678:394:8:o;2234:480::-;2342:7;-1:-1:-1;;;;;;;;;;;2365:27:8;;2357:72;;;;-1:-1:-1;;;2357:72:8;;4826:2:12;2357:72:8;;;4808:21:12;;;4845:18;;;4838:30;4904:34;4884:18;;;4877:62;4956:18;;2357:72:8;4624:356:12;2357:72:8;-1:-1:-1;;;;;;;;;;;2443:28:8;;2435:74;;;;-1:-1:-1;;;2435:74:8;;5187:2:12;2435:74:8;;;5169:21:12;5226:2;5206:18;;;5199:30;5265:34;5245:18;;;5238:62;-1:-1:-1;;;5316:18:12;;;5309:31;5357:19;;2435:74:8;4985:397:12;2435:74:8;2575:24;;-1:-1:-1;;;2575:24:8;;;;;5561:25:12;;;2515:9:8;5602:18:12;;;5595:34;;;2535:5:8;;-1:-1:-1;;;;;2575:18:8;;;;;5534::12;;2575:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2566:33;;-1:-1:-1;2566:33:8;-1:-1:-1;;;;;;;;;;;;2627:6:8;2616:1;2609:38;2662:24;;-1:-1:-1;;;2662:24:8;;;;;5561:25:12;;;5602:18;;;5595:34;;;2605:42:8;;-1:-1:-1;;;;;;2662:18:8;;;;;5534::12;;2662:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2653:33:8;2234:480;-1:-1:-1;;;;;;2234:480:8:o;876:245:9:-;953:14;;-1:-1:-1;;;;;953:14:9;939:10;:28;931:54;;;;-1:-1:-1;;;931:54:9;;3416:2:12;931:54:9;;;3398:21:12;3455:2;3435:18;;;3428:30;-1:-1:-1;;;3474:18:12;;;3467:43;3527:18;;931:54:9;3214:337:12;931:54:9;993:9;1004:17;1025:7;-1:-1:-1;;;;;1025:12:9;1045:13;1025:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:71;;;;1077:4;1069:37;;;;-1:-1:-1;;;1069:37:9;;6434:2:12;1069:37:9;;;6416:21:12;6473:2;6453:18;;;6446:30;-1:-1:-1;;;6492:18:12;;;6485:50;6552:18;;1069:37:9;6232:344:12;1069:37:9;925:196;;876:245;:::o;414:197::-;489:13;476:9;:26;468:59;;;;-1:-1:-1;;;468:59:9;;6783:2:12;468:59:9;;;6765:21:12;6822:2;6802:18;;;6795:30;-1:-1:-1;;;6841:18:12;;;6834:50;6901:18;;468:59:9;6581:344:12;468:59:9;542:12;;;;:6;:12;;;;;;;;541:13;533:47;;;;-1:-1:-1;;;533:47:9;;7132:2:12;533:47:9;;;7114:21:12;7171:2;7151:18;;;7144:30;-1:-1:-1;;;7190:18:12;;;7183:51;7251:18;;533:47:9;6930:345:12;533:47:9;587:12;;;;:6;:12;;;;;:19;;-1:-1:-1;;587:19:9;602:4;587:19;;;414:197::o;4297:3478:8:-;4344:7;4363:1;4368;4363:6;4359:3411;;-1:-1:-1;4386:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4359:3411::-;4468:1;4473;4468:6;4464:3306;;-1:-1:-1;4491:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4464:3306::-;4573:1;4578;4573:6;4569:3201;;-1:-1:-1;4596:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4569:3201::-;4678:1;4683;4678:6;4674:3096;;-1:-1:-1;4701:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4674:3096::-;4783:1;4788;4783:6;4779:2991;;-1:-1:-1;4806:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4779:2991::-;4888:1;4893;4888:6;4884:2886;;-1:-1:-1;4911:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4884:2886::-;4993:1;4998;4993:6;4989:2781;;-1:-1:-1;5016:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;4989:2781::-;5098:1;5103;5098:6;5094:2676;;-1:-1:-1;5121:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5094:2676::-;5203:1;5208;5203:6;5199:2571;;-1:-1:-1;5226:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5199:2571::-;5308:1;5313;5308:6;5304:2466;;-1:-1:-1;5331:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5304:2466::-;5413:1;5418:2;5413:7;5409:2361;;-1:-1:-1;5437:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5409:2361::-;5519:1;5524:2;5519:7;5515:2255;;-1:-1:-1;5543:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5515:2255::-;5625:1;5630:2;5625:7;5621:2149;;-1:-1:-1;5649:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5621:2149::-;5731:1;5736:2;5731:7;5727:2043;;-1:-1:-1;5755:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5727:2043::-;5837:1;5842:2;5837:7;5833:1937;;-1:-1:-1;5861:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5833:1937::-;5943:1;5948:2;5943:7;5939:1831;;-1:-1:-1;5967:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;5939:1831::-;6049:1;6054:2;6049:7;6045:1725;;-1:-1:-1;6073:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6045:1725::-;6155:1;6160:2;6155:7;6151:1619;;-1:-1:-1;6179:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6151:1619::-;6261:1;6266:2;6261:7;6257:1513;;-1:-1:-1;6285:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6257:1513::-;6367:1;6372:2;6367:7;6363:1407;;-1:-1:-1;6391:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6363:1407::-;6473:1;6478:2;6473:7;6469:1301;;-1:-1:-1;6497:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6469:1301::-;6579:1;6584:2;6579:7;6575:1195;;-1:-1:-1;6603:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6575:1195::-;6685:1;6690:2;6685:7;6681:1089;;-1:-1:-1;6709:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6681:1089::-;6791:1;6796:2;6791:7;6787:983;;-1:-1:-1;6815:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6787:983::-;6897:1;6902:2;6897:7;6893:877;;-1:-1:-1;6921:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6893:877::-;7003:1;7008:2;7003:7;6999:771;;-1:-1:-1;7027:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;6999:771::-;7109:1;7114:2;7109:7;7105:665;;-1:-1:-1;7133:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7105:665::-;7215:1;7220:2;7215:7;7211:559;;-1:-1:-1;7239:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7211:559::-;7321:1;7326:2;7321:7;7317:453;;-1:-1:-1;7345:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7317:453::-;7427:1;7432:2;7427:7;7423:347;;-1:-1:-1;7451:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7423:347::-;7533:1;7538:2;7533:7;7529:241;;-1:-1:-1;7557:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7529:241::-;7639:1;7644:2;7639:7;7635:135;;-1:-1:-1;7663:66:8;;4297:3478;-1:-1:-1;4297:3478:8:o;7635:135::-;7741:29;;-1:-1:-1;;;7741:29:8;;7482:2:12;7741:29:8;;;7464:21:12;7521:2;7501:18;;;7494:30;-1:-1:-1;;;7540:18:12;;;7533:49;7599:18;;7741:29:8;7280:343:12;196:131;-1:-1:-1;;;;;271:31:12;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:247::-;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;:::-;568:5;332:247;-1:-1:-1;;;332:247:12:o;781:127::-;842:10;837:3;833:20;830:1;823:31;873:4;870:1;863:15;897:4;894:1;887:15;913:922;982:6;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1091:9;1078:23;1120:18;1161:2;1153:6;1150:14;1147:34;;;1177:1;1174;1167:12;1147:34;1215:6;1204:9;1200:22;1190:32;;1260:7;1253:4;1249:2;1245:13;1241:27;1231:55;;1282:1;1279;1272:12;1231:55;1318:2;1305:16;1340:2;1336;1333:10;1330:36;;;1346:18;;:::i;:::-;1421:2;1415:9;1389:2;1475:13;;-1:-1:-1;;1471:22:12;;;1495:2;1467:31;1463:40;1451:53;;;1519:18;;;1539:22;;;1516:46;1513:72;;;1565:18;;:::i;:::-;1605:10;1601:2;1594:22;1640:2;1632:6;1625:18;1680:7;1675:2;1670;1666;1662:11;1658:20;1655:33;1652:53;;;1701:1;1698;1691:12;1652:53;1757:2;1752;1748;1744:11;1739:2;1731:6;1727:15;1714:46;1802:1;1780:15;;;1797:2;1776:24;1769:35;;;;-1:-1:-1;1784:6:12;913:922;-1:-1:-1;;;;;913:922:12:o;1840:180::-;1899:6;1952:2;1940:9;1931:7;1927:23;1923:32;1920:52;;;1968:1;1965;1958:12;1920:52;-1:-1:-1;1991:23:12;;1840:180;-1:-1:-1;1840:180:12:o;2217:400::-;2311:6;2319;2327;2380:2;2368:9;2359:7;2355:23;2351:32;2348:52;;;2396:1;2393;2386:12;2348:52;2435:9;2422:23;2454:31;2479:5;2454:31;:::i;:::-;2504:5;2556:2;2541:18;;2528:32;;-1:-1:-1;2607:2:12;2592:18;;;2579:32;;2217:400;-1:-1:-1;;;2217:400:12:o;3556:428::-;3687:3;3725:6;3719:13;3750:1;3760:129;3774:6;3771:1;3768:13;3760:129;;;3872:4;3856:14;;;3852:25;;3846:32;3833:11;;;3826:53;3789:12;3760:129;;;3907:6;3904:1;3901:13;3898:48;;;3942:1;3933:6;3928:3;3924:16;3917:27;3898:48;-1:-1:-1;3962:16:12;;;;;3556:428;-1:-1:-1;;3556:428:12:o;4337:282::-;4375:3;4419:10;4412:5;4408:22;4449:7;4439:138;;4499:10;4494:3;4490:20;4487:1;4480:31;4534:4;4531:1;4524:15;4562:4;4559:1;4552:15;4439:138;-1:-1:-1;;4593:20:12;;4337:282;-1:-1:-1;;4337:282:12:o;5640:245::-;5719:6;5727;5780:2;5768:9;5759:7;5755:23;5751:32;5748:52;;;5796:1;5793;5786:12;5748:52;-1:-1:-1;;5819:16:12;;5875:2;5860:18;;;5854:25;5819:16;;5854:25;;-1:-1:-1;5640:245:12:o",
    "linkReferences": {},
    "immutableReferences": {
      "17743": [
        {
          "start": 798,
          "length": 32
        }
      ],
      "18399": [
        {
          "start": 1902,
          "length": 32
        },
        {
          "start": 2082,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "FIELD_SIZE()": "414a37ba",
    "ROOT_HISTORY_SIZE()": "cd87a3b4",
    "ZERO_VALUE()": "ec732959",
    "currentRootIndex()": "90eeb02b",
    "deposit(bytes32)": "b214faa5",
    "filledSubtrees(uint256)": "f178e47c",
    "getLastRoot()": "ba70f757",
    "hashLeftRight(address,bytes32,bytes32)": "8ea3099e",
    "hasher()": "ed33639f",
    "isKnownRoot(bytes32)": "6d9833e3",
    "levels()": "4ecf518b",
    "nextIndex()": "fc7e9c6f",
    "rewardRelayer(address)": "95bbe4e7",
    "roots(uint256)": "c2b40ae4",
    "setLensInteractor(address)": "45af8858",
    "verifyAndRemoveWord(string)": "5436d4e8",
    "zeros(uint256)": "e8295588"
  },
  "ast": {
    "absolutePath": "src/Pool.sol",
    "id": 18538,
    "exportedSymbols": {
      "IHasher": [
        17734
      ],
      "MerkleTreeWithHistory": [
        18392
      ],
      "Pool": [
        18537
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1237:9",
    "nodes": [
      {
        "id": 18394,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 18395,
        "nodeType": "ImportDirective",
        "src": "65:37:9",
        "absolutePath": "src/MerkleTreeWithHistory.sol",
        "file": "./MerkleTreeWithHistory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18538,
        "sourceUnit": 18393,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 18537,
        "nodeType": "ContractDefinition",
        "src": "104:1170:9",
        "nodes": [
          {
            "id": 18399,
            "nodeType": "VariableDeclaration",
            "src": "147:31:9",
            "constant": false,
            "mutability": "immutable",
            "name": "depositAmount",
            "nameLocation": "165:13:9",
            "scope": 18537,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18398,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "147:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18403,
            "nodeType": "VariableDeclaration",
            "src": "183:39:9",
            "constant": false,
            "mutability": "mutable",
            "name": "hashes",
            "nameLocation": "216:6:9",
            "scope": 18537,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 18402,
              "keyType": {
                "id": 18400,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "191:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "183:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 18401,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "202:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 18405,
            "nodeType": "VariableDeclaration",
            "src": "227:22:9",
            "constant": false,
            "mutability": "mutable",
            "name": "lensInteractor",
            "nameLocation": "235:14:9",
            "scope": 18537,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "227:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 18421,
            "nodeType": "FunctionDefinition",
            "src": "254:156:9",
            "body": {
              "id": 18420,
              "nodeType": "Block",
              "src": "369:41:9",
              "statements": [
                {
                  "expression": {
                    "id": 18418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18416,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18399,
                      "src": "375:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18417,
                      "name": "_depostiAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18407,
                      "src": "391:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "375:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18419,
                  "nodeType": "ExpressionStatement",
                  "src": "375:30:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "3230",
                    "id": 18410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "312:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  {
                    "arguments": [
                      {
                        "hexValue": "307838333538346638336632366146346544444139434265384337333062633837433336346232386665",
                        "id": 18412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "324:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x83584f83f26aF4eDDA9CBe8C730bc87C364b28fe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 18411,
                      "name": "IHasher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17734,
                      "src": "316:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IHasher_$17734_$",
                        "typeString": "type(contract IHasher)"
                      }
                    },
                    "id": 18413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "316:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$17734",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 18414,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 18409,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18392,
                  "src": "290:21:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "290:78:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 18408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18407,
                  "mutability": "mutable",
                  "name": "_depostiAmount",
                  "nameLocation": "274:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 18421,
                  "src": "266:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "265:24:9"
            },
            "returnParameters": {
              "id": 18415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:9"
            },
            "scope": 18537,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 18449,
            "nodeType": "FunctionDefinition",
            "src": "414:197:9",
            "body": {
              "id": 18448,
              "nodeType": "Block",
              "src": "462:149:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18427,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "476:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "476:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18429,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18399,
                          "src": "489:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "476:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206465706f73697420616d6f756e74",
                        "id": 18431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "504:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        },
                        "value": "Wrong deposit amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b95c8f1d5c48fa89ffc4a194cfcfb0f6de5008110fe67a98c008ab62148fdd77",
                          "typeString": "literal_string \"Wrong deposit amount\""
                        }
                      ],
                      "id": 18426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "468:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18433,
                  "nodeType": "ExpressionStatement",
                  "src": "468:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "541:13:9",
                        "subExpression": {
                          "baseExpression": {
                            "id": 18435,
                            "name": "hashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18403,
                            "src": "542:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 18437,
                          "indexExpression": {
                            "id": 18436,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18423,
                            "src": "549:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "542:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4861736820616c726561647920696e636c75646564",
                        "id": 18439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "556:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        },
                        "value": "Hash already included"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f897c755cf252914adfbbbb008b961bb2c9d8711c9c3ccd935b855676c50084",
                          "typeString": "literal_string \"Hash already included\""
                        }
                      ],
                      "id": 18434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "533:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18441,
                  "nodeType": "ExpressionStatement",
                  "src": "533:47:9"
                },
                {
                  "expression": {
                    "id": 18446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18442,
                        "name": "hashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18403,
                        "src": "587:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 18444,
                      "indexExpression": {
                        "id": 18443,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18423,
                        "src": "594:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "587:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 18445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "602:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "587:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18447,
                  "nodeType": "ExpressionStatement",
                  "src": "587:19:9"
                }
              ]
            },
            "functionSelector": "b214faa5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "423:7:9",
            "parameters": {
              "id": 18424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18423,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "439:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 18449,
                  "src": "431:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:14:9"
            },
            "returnParameters": {
              "id": 18425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:9"
            },
            "scope": 18537,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18485,
            "nodeType": "FunctionDefinition",
            "src": "615:257:9",
            "body": {
              "id": 18484,
              "nodeType": "Block",
              "src": "673:199:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18455,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "689:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "689:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18457,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18405,
                          "src": "703:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "689:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 18459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "719:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 18454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "681:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18461,
                  "nodeType": "ExpressionStatement",
                  "src": "681:54:9"
                },
                {
                  "assignments": [
                    18463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18463,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "750:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 18484,
                      "src": "742:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 18462,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "742:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18470,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18467,
                            "name": "word",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18451,
                            "src": "784:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 18465,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "767:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 18466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "767:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 18468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:22:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18464,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "757:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 18469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "742:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 18472,
                          "name": "hashes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18403,
                          "src": "804:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 18474,
                        "indexExpression": {
                          "id": 18473,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18463,
                          "src": "811:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "804:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576f72642068617368206e6f7420666f756e64",
                        "id": 18475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_644919c135e6d060ecf692900196769b544e46ac2daacc01f580dec6d5242cac",
                          "typeString": "literal_string \"Word hash not found\""
                        },
                        "value": "Word hash not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_644919c135e6d060ecf692900196769b544e46ac2daacc01f580dec6d5242cac",
                          "typeString": "literal_string \"Word hash not found\""
                        }
                      ],
                      "id": 18471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "796:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18477,
                  "nodeType": "ExpressionStatement",
                  "src": "796:44:9"
                },
                {
                  "expression": {
                    "id": 18482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 18478,
                        "name": "hashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18403,
                        "src": "847:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 18480,
                      "indexExpression": {
                        "id": 18479,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18463,
                        "src": "854:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "847:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 18481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "862:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "847:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18483,
                  "nodeType": "ExpressionStatement",
                  "src": "847:20:9"
                }
              ]
            },
            "functionSelector": "5436d4e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAndRemoveWord",
            "nameLocation": "624:19:9",
            "parameters": {
              "id": 18452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18451,
                  "mutability": "mutable",
                  "name": "word",
                  "nameLocation": "658:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 18485,
                  "src": "644:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18450,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "643:20:9"
            },
            "returnParameters": {
              "id": 18453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:0:9"
            },
            "scope": 18537,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18517,
            "nodeType": "FunctionDefinition",
            "src": "876:245:9",
            "body": {
              "id": 18516,
              "nodeType": "Block",
              "src": "925:196:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18491,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "939:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "939:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 18493,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18405,
                          "src": "953:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "939:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f207065726d697373696f6e",
                        "id": 18495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        },
                        "value": "No permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_961e5fcdee4ffa314d3717a00299e7043e52987f7f47e3b4c405f5316c9aba4a",
                          "typeString": "literal_string \"No permission\""
                        }
                      ],
                      "id": 18490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "931:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18497,
                  "nodeType": "ExpressionStatement",
                  "src": "931:54:9"
                },
                {
                  "assignments": [
                    18499,
                    18501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18499,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "998:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 18516,
                      "src": "993:9:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 18498,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "993:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18501,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1017:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 18516,
                      "src": "1004:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18500,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1004:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18508,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 18506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1060:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 18502,
                          "name": "relayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18487,
                          "src": "1025:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 18503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1025:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 18505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 18504,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18399,
                          "src": "1045:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1025:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 18507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18510,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18499,
                        "src": "1077:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 18511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 18509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1069:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18513,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:37:9"
                },
                {
                  "expression": {
                    "id": 18514,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18501,
                    "src": "1112:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 18515,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:4:9"
                }
              ]
            },
            "functionSelector": "95bbe4e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardRelayer",
            "nameLocation": "885:13:9",
            "parameters": {
              "id": 18488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18487,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nameLocation": "907:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 18517,
                  "src": "899:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:17:9"
            },
            "returnParameters": {
              "id": 18489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:9"
            },
            "scope": 18537,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18536,
            "nodeType": "FunctionDefinition",
            "src": "1125:147:9",
            "body": {
              "id": 18535,
              "nodeType": "Block",
              "src": "1186:86:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18523,
                          "name": "lensInteractor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18405,
                          "src": "1200:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1226:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1218:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18524,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1218:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1218:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1200:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1192:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1192:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18530,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:37:9"
                },
                {
                  "expression": {
                    "id": 18533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18531,
                      "name": "lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18405,
                      "src": "1235:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18532,
                      "name": "_lensInteractor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18519,
                      "src": "1252:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1235:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18534,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:32:9"
                }
              ]
            },
            "functionSelector": "45af8858",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLensInteractor",
            "nameLocation": "1134:17:9",
            "parameters": {
              "id": 18520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18519,
                  "mutability": "mutable",
                  "name": "_lensInteractor",
                  "nameLocation": "1160:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 18536,
                  "src": "1152:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:25:9"
            },
            "returnParameters": {
              "id": 18521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:9"
            },
            "scope": 18537,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18396,
              "name": "MerkleTreeWithHistory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18392,
              "src": "121:21:9"
            },
            "id": 18397,
            "nodeType": "InheritanceSpecifier",
            "src": "121:21:9"
          }
        ],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18537,
          18392
        ],
        "name": "Pool",
        "nameLocation": "113:4:9",
        "scope": 18538,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 9
}